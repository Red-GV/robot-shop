apiVersion: apps/v1
kind: Deployment
metadata:
  name: ratings
  labels:
    service: ratings
spec:
  replicas: 1
  selector:
    matchLabels:
      service: ratings
  template:
    metadata:
      labels:
        service: ratings
    spec:
      initContainers:
      - name: wait-for-mysql
        image: mysql:5.7
        command:
          - sh
          - -c
          - |
            until mysql -h mysql -e "SELECT 1 FROM information_schema.tables WHERE table_schema = 'ratings' AND table_name = 'ratings' LIMIT 1;" ; do
              echo 'waiting for ratings.ratings table';
              sleep 2;
            done
      {{ if .Values.psp.enabled }}
      serviceAccountName: robot-shop
      {{ end }}
      containers:
      - name: ratings
        image: {{ .Values.image.repo }}/rs-ratings:{{ .Values.image.version }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 800m
            memory: 600Mi
          requests:
            cpu: 600m
            memory: 300Mi
        readinessProbe:
          httpGet:
            path: /_health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 30
          successThreshold: 1
      restartPolicy: Always
      {{- with .Values.ratings.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.ratings.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.ratings.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.secret }}
      {{- if .Values.secret.enabled }}
      imagePullSecrets:
      - name: {{ .Values.secret.name }}
      {{- end }}
      {{- end }}
